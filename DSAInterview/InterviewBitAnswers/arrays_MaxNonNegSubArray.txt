public class Solution {
    public ArrayList<Integer> maxset(ArrayList<Integer> A) {
        long maxSum = 0;
        long tempSum = 0;
        int startIndex = 0;
        int startTemp = 0;
        int endIndex = -1;
        int endTemp = -1;
        ArrayList<Integer> maxSub = new ArrayList<Integer>();
        for(int i =0; i<A.size(); ++i)  {
            if(A.get(i)>-1)  {
                tempSum+=A.get(i);
                endTemp+=1;
            }
            else {
                if(tempSum>maxSum||(tempSum==maxSum&&(endTemp-startTemp)>(endIndex-startIndex)))    {
                    endIndex = endTemp;
                    startIndex = startTemp;
                    maxSum = tempSum;
                    }
                tempSum=0;
                startTemp=i+1;
                endTemp=i;
                }
        }
        if(tempSum>maxSum||(tempSum==maxSum&&(endTemp-startTemp)>(endIndex-startIndex)))    {
            endIndex = endTemp;
            startIndex = startTemp;
        }
        if (endIndex!=-1)   {
            
        
        for(int i=startIndex;i<=endIndex;++i)   {
            maxSub.add(A.get(i));
        }
        }
        return maxSub;
    }
}

